name: Deploy-for-windows

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload:
    name: Build
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Rust
        # Or @nightly if you want
        uses: dtolnay/rust-toolchain@stable
        # Arguments to pass in
        with:
          # Make Rust compile to our target (defined in the matrix)
          targets: x86_64-pc-windows-gnu

      - name: Install cross (for cross-compilation)
        run: |
          cargo install cross
        

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release

      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="m2psp"

          dirname="$binary_name-${{ env.VERSION }}-x86_64-pc-windows-gnu"
          mkdir "$dirname"

          mv "target/release/$binary_name.exe" "$dirname"

          7z a "$dirname.zip" "$dirname"
          echo "ASSET=$dirname.zip" >> $GITHUB_ENV


      - name: Upload the binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}
